#include "Event.h"
#include "Log.h"

using namespace RG;

Vec<Vec<std::unique_ptr<CallbackBase>>> EventManager::callbacks;

namespace RG
{
	//Event
	void Event::Invoke(Event* e)
	{
	}
	//
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//OnRenderEvent
	OnRenderEvent::OnRenderEvent()
	{
		type = EventType::OnRender;
	}
	//
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//OnWindowResizeEvent
	OnWindowResizeEvent::OnWindowResizeEvent() : size(0, 0)
	{
		type = EventType::OnWindowResize;
	}
	//
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//OnLevelInitEvent
	OnSceneInitEvent::OnSceneInitEvent()
	{
		type = EventType::OnSceneInit;
	}
	//
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//EventManager
	void EventManager::Init()
	{
		for (int i = 0; i < 20; i++)
			callbacks.PushMove(Vec<std::unique_ptr<CallbackBase>>());
	}
	
	void EventManager::Invoke(Event* e)
	{
		int funcsAmount = callbacks[e->type].GetLength();

		for (int i = 0; i < funcsAmount; i++)
			callbacks[e->type][i].get()->DoFunc(e);
	}

	//
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}